/*
 * jws API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateGameRequest;
import org.openapitools.client.model.GameDetailResponse;
import org.openapitools.client.model.GameListResponse;
import org.openapitools.client.model.JoinGameRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BasicsApi
 */
@Ignore
public class BasicsApiTest {

    private final BasicsApi api = new BasicsApi();

    
    /**
     * Get game info
     *
     * Get game info
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gamesGameIdGetTest() throws ApiException {
        Long gameId = null;
        GameDetailResponse response = api.gamesGameIdGet(gameId);

        // TODO: test validations
    }
    
    /**
     * Join a game
     *
     * Join a game
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gamesGameIdPostTest() throws ApiException {
        Long gameId = null;
        JoinGameRequest joinGameRequest = null;
        GameDetailResponse response = api.gamesGameIdPost(gameId, joinGameRequest);

        // TODO: test validations
    }
    
    /**
     * Start a game
     *
     * Start a game
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gamesGameIdStartPatchTest() throws ApiException {
        Long gameId = null;
        GameDetailResponse response = api.gamesGameIdStartPatch(gameId);

        // TODO: test validations
    }
    
    /**
     * Get all games
     *
     * Get all games
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gamesGetTest() throws ApiException {
        List<GameListResponse> response = api.gamesGet();

        // TODO: test validations
    }
    
    /**
     * Create a new game
     *
     * Create a new game
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gamesPostTest() throws ApiException {
        CreateGameRequest createGameRequest = null;
        GameDetailResponse response = api.gamesPost(createGameRequest);

        // TODO: test validations
    }
    
}
